generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id              Int      @id @default(autoincrement())
  first_name      String   @db.VarChar(255)
  last_name       String   @db.VarChar(255)
  profile_picture String   @db.Text()
  email           String   @unique @db.VarChar(255)
  created_at      DateTime @default(now()) @db.Timestamp(6)
  lyrics          lyric[]
}

model artist {
  id              Int      @id @default(autoincrement())
  name            String   @unique @db.VarChar(255)
  profile_picture String   @db.Text()
  about           String   @db.Text()
  created_at      DateTime @default(now()) @db.Timestamp(6)
  lyrics          lyric[]
}

model lyric {
  id           Int          @id @default(autoincrement())
  song_name    String       @db.VarChar(255)
  released_at  DateTime     @db.Timestamptz()
  youtube_link String
  artist_id    Int
  artist       artist       @relation(fields: [artist_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  lyrics       String?      @db.Text()
  posted_by_id Int
  posted_by    user         @relation(fields: [posted_by_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_at   DateTime     @default(now()) @db.Timestamp(6)
  updated_at   DateTime     @default(now()) @db.Timestamp(6)
  timedVerse   timedVerse[]
}

model timedVerse {
  id       Int    @id @default(autoincrement())
  lyric_id Int
  song     lyric  @relation(fields: [lyric_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  verse    String @db.Text()
  start    Float  @db.DoublePrecision()
  end      Float  @db.DoublePrecision()
}
